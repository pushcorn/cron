{
  "apis": [
    {
      "name": "cron.apis.GetJob",
      "requestMethod": "GET",
      "requestPath": "/cron/jobs/:id",
      "description": "Get the details of a scheduled job.",
      "request": {
        "parameters": [
          {
            "spec": "<id>",
            "type": "string",
            "description": "The job ID.",
            "source": "path"
          }
        ]
      },
      "responses": [
        "cron.responses.JobReturned",
        "cron.responses.JobNotFound",
        "http.responses.ValidationFailed"
      ]
    },
    {
      "name": "cron.apis.GetStats",
      "requestMethod": "GET",
      "requestPath": "/cron/stats",
      "description": "Get the scheduler stats.",
      "responses": [
        "cron.responses.StatsReturned"
      ]
    },
    {
      "name": "cron.apis.ListJobs",
      "requestMethod": "GET",
      "requestPath": "/cron/jobs",
      "description": "List scheduled jobs.",
      "responses": [
        "cron.responses.JobsReturned"
      ]
    },
    {
      "name": "cron.apis.RemoveJob",
      "requestMethod": "DELETE",
      "requestPath": "/cron/jobs/:id",
      "description": "Unschedule a cron job.",
      "request": {
        "parameters": [
          {
            "spec": "<id>",
            "type": "string",
            "description": "The job ID.",
            "source": "path"
          }
        ]
      },
      "responses": [
        "cron.responses.JobRemoved",
        "cron.responses.JobNotFound",
        "http.responses.ValidationFailed"
      ]
    },
    {
      "name": "cron.apis.ScheduleJob",
      "requestMethod": "POST",
      "requestPath": "/cron/jobs",
      "description": "Schedule a cron job.",
      "request": {
        "parameters": [
          {
            "spec": "<expr>",
            "type": "string",
            "description": "The cron expression.",
            "source": "form",
            "constraints": [
              {
                "type": "cron:expression",
                "code": "error.invalid_expr",
                "message": "The cron expression '%{value}' is invalid. (Cause: %{cause})"
              }
            ]
          },
          {
            "spec": "<command>",
            "type": "string",
            "description": "The command to run.",
            "source": "form"
          },
          {
            "spec": "[timezone]",
            "type": "string",
            "description": "The time zone.",
            "source": "form",
            "constraints": [
              {
                "type": "timezone",
                "code": "error.invalid_timezone",
                "message": "The timezone '%{value}' is invalid."
              }
            ]
          }
        ]
      },
      "responses": [
        "cron.responses.JobScheduled",
        "http.responses.ValidationFailed"
      ]
    },
    {
      "name": "cron.apis.UpdateJob",
      "requestMethod": "PUT",
      "requestPath": "/cron/jobs/:id",
      "description": "Update a cron job.",
      "request": {
        "parameters": [
          {
            "spec": "<id>",
            "type": "string",
            "description": "The job ID.",
            "source": "path"
          },
          {
            "spec": "expr",
            "type": "string?",
            "description": "The cron expression.",
            "source": "form",
            "constraints": [
              {
                "type": "cron:expression",
                "code": "error.invalid_expr",
                "message": "The cron expression '%{value}' is invalid. (Cause: %{cause})"
              }
            ]
          },
          {
            "spec": "command",
            "type": "string?",
            "description": "The command to run.",
            "source": "form"
          },
          {
            "spec": "timezone",
            "type": "string?",
            "description": "The time zone.",
            "source": "form",
            "constraints": [
              {
                "type": "timezone",
                "code": "error.invalid_timezone",
                "message": "The timezone '%{value}' is invalid."
              }
            ]
          }
        ]
      },
      "responses": [
        "cron.responses.JobUpdated",
        "cron.responses.JobNotFound",
        "http.responses.ValidationFailed"
      ]
    },
    {
      "name": "http.apis.GetApiSpec",
      "requestMethod": "GET",
      "requestPath": "/",
      "description": "Get the API specification.",
      "responses": [
        "http.responses.ApiSpecReturned"
      ]
    }
  ],
  "responses": [
    {
      "name": "cron.responses.JobNotFound",
      "status": 404,
      "message": "The job was not found.",
      "code": "error.job_not_found"
    },
    {
      "name": "cron.responses.JobRemoved",
      "status": 200,
      "message": "The job has been removed.",
      "fields": [
        {
          "spec": "<job>",
          "type": "cron.Job",
          "description": "The removed job."
        }
      ]
    },
    {
      "name": "cron.responses.JobReturned",
      "status": 200,
      "message": "The job has been returned.",
      "fields": [
        {
          "spec": "<job>",
          "type": "cron.Job",
          "description": "The cron job."
        }
      ]
    },
    {
      "name": "cron.responses.JobScheduled",
      "status": 201,
      "message": "The job has been scheduled.",
      "fields": [
        {
          "spec": "<job>",
          "type": "cron.Job",
          "description": "The scheduled job."
        }
      ]
    },
    {
      "name": "cron.responses.JobUpdated",
      "status": 200,
      "message": "The job has been updated.",
      "fields": [
        {
          "spec": "<job>",
          "type": "cron.Job",
          "description": "The updated job."
        }
      ]
    },
    {
      "name": "cron.responses.JobsReturned",
      "status": 200,
      "message": "The jobs has been returned.",
      "fields": [
        {
          "spec": "[jobs...]",
          "type": "cron.Job"
        }
      ]
    },
    {
      "name": "cron.responses.StatsReturned",
      "status": 200,
      "message": "The stats has been returned.",
      "fields": [
        {
          "spec": "<stats>",
          "type": "cron.Stats",
          "description": "The scheduler stats."
        }
      ]
    },
    {
      "name": "http.responses.ApiSpecReturned",
      "status": 200,
      "message": "The API spec has been returned.",
      "fields": [
        {
          "spec": "<spec>",
          "type": "http.ApiSpec"
        }
      ]
    },
    {
      "name": "http.responses.ValidationFailed",
      "status": 400,
      "message": "One or more parameters are invalid.",
      "code": "error.model_validation_failed",
      "fields": [
        {
          "spec": "<violations...>",
          "type": "http.responses.ValidationFailed.Violation",
          "description": "The validation violations."
        }
      ]
    }
  ],
  "models": [
    {
      "name": "cron.Job",
      "fields": [
        {
          "spec": "<id>",
          "type": "string"
        },
        {
          "spec": "<expr>",
          "type": "string",
          "description": "The cron expression."
        },
        {
          "spec": "<command>",
          "type": "string",
          "description": "The command to run."
        },
        {
          "spec": "[timezone]",
          "type": "string",
          "description": "The time zone."
        },
        {
          "spec": "status",
          "type": "string",
          "description": "The job status.",
          "constraints": [
            {
              "type": "choice",
              "code": "error.invalid_choice",
              "message": "The %{property.kind} '%{property.name}' is assigned to an invalid value '%{value}'. (Allowed: %{constraint.choiceValues.slice (0, 10).join (', ') + (constraint.choiceValues.length > 10 ? '...' : '')})",
              "options": {
                "choices": [
                  "scheduled",
                  "queued",
                  "running"
                ]
              }
            }
          ]
        },
        {
          "spec": "error",
          "type": "string",
          "description": "The error message."
        },
        {
          "spec": "output",
          "type": "string",
          "description": "The command output."
        },
        {
          "spec": "duration",
          "type": "integer",
          "description": "The time used for the last run."
        },
        {
          "spec": "exitCode",
          "type": "integer",
          "description": "The last command exit code."
        },
        {
          "spec": "nextRun",
          "type": "string",
          "description": "The local time of the next run."
        },
        {
          "spec": "nextRunUtc",
          "type": "date",
          "description": "The UTC time of the next run."
        },
        {
          "spec": "timeUntilNextRun",
          "type": "integer",
          "description": "The remaining time till the next run."
        },
        {
          "spec": "timeUntilNextRunHumanized",
          "type": "string",
          "description": "The human readable duration of the remaining time till the next run."
        }
      ]
    },
    {
      "name": "cron.Stats",
      "fields": [
        {
          "spec": "running",
          "type": "integer",
          "description": "Number of running jobs."
        },
        {
          "spec": "queued",
          "type": "integer",
          "description": "Number of queued jobs."
        },
        {
          "spec": "scheduled",
          "type": "integer",
          "description": "Number of scheduled jobs."
        },
        {
          "spec": "taskQueue",
          "type": "cron.Stats.TaskQueueStats",
          "description": "The task queue stats."
        },
        {
          "spec": "pool",
          "type": "cron.Stats.PoolStats",
          "description": "The database pool stats."
        }
      ]
    },
    {
      "name": "cron.Stats.PoolStats",
      "fields": [
        {
          "spec": "id",
          "type": "string",
          "description": "The database pool ID."
        },
        {
          "spec": "total",
          "type": "integer",
          "description": "Number of total clients."
        },
        {
          "spec": "waiting",
          "type": "integer",
          "description": "Number of waiting clients."
        },
        {
          "spec": "idle",
          "type": "integer",
          "description": "Number of idle clients."
        },
        {
          "spec": "size",
          "type": "integer",
          "description": "The pool size."
        }
      ]
    },
    {
      "name": "cron.Stats.TaskQueueStats",
      "fields": [
        {
          "spec": "pending",
          "type": "integer",
          "description": "Number of pending tasks."
        },
        {
          "spec": "queued",
          "type": "integer",
          "description": "Number of queued tasks."
        }
      ]
    },
    {
      "name": "http.ApiSpec",
      "fields": [
        {
          "spec": "apis...",
          "type": "http.ApiSpec.Api"
        },
        {
          "spec": "responses...",
          "type": "http.ApiSpec.Response"
        },
        {
          "spec": "models...",
          "type": "http.ApiSpec.Model"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Api",
      "fields": [
        {
          "spec": "<name>",
          "type": "string"
        },
        {
          "spec": "[requestMethod]",
          "type": "string?"
        },
        {
          "spec": "[requestPath]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "request",
          "type": "http.ApiSpec.Request?"
        },
        {
          "spec": "responses...",
          "type": "string?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Constraint",
      "fields": [
        {
          "spec": "<type>",
          "type": "string"
        },
        {
          "spec": "[code]",
          "type": "string"
        },
        {
          "spec": "[message]",
          "type": "string"
        },
        {
          "spec": "name",
          "type": "string?"
        },
        {
          "spec": "condition",
          "type": "string?"
        },
        {
          "spec": "options",
          "type": "object?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Field",
      "fields": [
        {
          "spec": "<spec>",
          "type": "string"
        },
        {
          "spec": "[type]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "[defval]",
          "type": "any"
        },
        {
          "spec": "constraints...",
          "type": "http.ApiSpec.Constraint?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Model",
      "fields": [
        {
          "spec": "<name>",
          "type": "string",
          "description": "The model name."
        },
        {
          "spec": "fields...",
          "type": "http.ApiSpec.Field?",
          "description": "The model fields."
        }
      ]
    },
    {
      "name": "http.ApiSpec.Parameter",
      "fields": [
        {
          "spec": "<spec>",
          "type": "string"
        },
        {
          "spec": "[type]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "[defval]",
          "type": "any"
        },
        {
          "spec": "label",
          "type": "string?"
        },
        {
          "spec": "source",
          "type": "string?"
        },
        {
          "spec": "constraints...",
          "type": "http.ApiSpec.Constraint?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Request",
      "fields": [
        {
          "spec": "parameters...",
          "type": "http.ApiSpec.Parameter?"
        }
      ]
    },
    {
      "name": "http.ApiSpec.Response",
      "fields": [
        {
          "spec": "<name>",
          "type": "string",
          "description": "The response name."
        },
        {
          "spec": "<status>",
          "type": "integer",
          "description": "The response status code."
        },
        {
          "spec": "[message]",
          "type": "string?",
          "description": "The response status message."
        },
        {
          "spec": "[code]",
          "type": "string?",
          "description": "The error code that the response represents."
        },
        {
          "spec": "fields...",
          "type": "http.ApiSpec.Field?",
          "description": "The response fields."
        }
      ]
    },
    {
      "name": "http.responses.ValidationFailed.Violation",
      "fields": [
        {
          "spec": "field",
          "type": "string",
          "description": "The field that failed the validation."
        },
        {
          "spec": "constraint",
          "type": "string",
          "description": "The constraint that caused error."
        },
        {
          "spec": "code",
          "type": "string",
          "description": "The error code."
        },
        {
          "spec": "message",
          "type": "string",
          "description": "The error message."
        }
      ]
    }
  ]
}