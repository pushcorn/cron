{
  "apis": [
    {
      "name": "AddJob",
      "method": "POST",
      "path": "/jobs",
      "description": "Add a cron job.",
      "request": {
        "parameters": [
          {
            "spec": "<expr>",
            "type": "string",
            "description": "The cron expression.",
            "source": "form",
            "constraints": [
              {
                "type": "cron:expression",
                "code": "error.invalid_expr",
                "message": "The cron expression '%{value}' is invalid. (Cause: %{cause})"
              }
            ]
          },
          {
            "spec": "<command>",
            "type": "string",
            "description": "The command to run.",
            "source": "form"
          },
          {
            "spec": "[timezone]",
            "type": "string",
            "description": "The timezone in which the job should be run.",
            "source": "form",
            "constraints": [
              {
                "type": "timezone",
                "code": "error.invalid_timezone",
                "message": "The timezone '%{value}' is invalid."
              }
            ]
          }
        ]
      },
      "responses": [
        "JobCreated",
        "ValidationFailed"
      ]
    },
    {
      "name": "GetApiSpec",
      "method": "GET",
      "path": "/",
      "description": "Get the API specification.",
      "responses": [
        "ApiSpecReturned"
      ]
    },
    {
      "name": "GetJob",
      "method": "GET",
      "path": "/jobs/:id",
      "description": "Get the details of a scheduled job.",
      "request": {
        "parameters": [
          {
            "spec": "<id>",
            "type": "integer",
            "description": "The job ID.",
            "source": "path",
            "constraints": [
              {
                "type": "min",
                "code": "error.less_than_min",
                "message": "The minimum value of '%{property.name}' is '%{constraint.min}'.",
                "options": {
                  "min": 1
                }
              }
            ]
          }
        ]
      },
      "responses": [
        "JobReturned",
        "JobNotFound",
        "ValidationFailed"
      ]
    },
    {
      "name": "ListJobs",
      "method": "GET",
      "path": "/jobs",
      "description": "List scheduled jobs.",
      "responses": [
        "JobListReturned"
      ]
    },
    {
      "name": "RemoveJob",
      "method": "DELETE",
      "path": "/jobs/:id",
      "description": "Remove a cron job.",
      "request": {
        "parameters": [
          {
            "spec": "<id>",
            "type": "integer",
            "description": "The job ID to be removed.",
            "source": "path",
            "constraints": [
              {
                "type": "min",
                "code": "error.less_than_min",
                "message": "The minimum value of '%{property.name}' is '%{constraint.min}'.",
                "options": {
                  "min": 1
                }
              }
            ]
          }
        ]
      },
      "responses": [
        "JobRemoved",
        "JobNotFound",
        "ValidationFailed"
      ]
    }
  ],
  "responses": [
    {
      "name": "ApiSpecReturned",
      "status": 200,
      "message": "The API spec has been returned.",
      "fields": [
        {
          "spec": "<spec>",
          "type": "ApiSpec"
        }
      ]
    },
    {
      "name": "JobCreated",
      "status": 201,
      "message": "The job has been created.",
      "fields": [
        {
          "spec": "<job>",
          "type": "Job",
          "description": "The created job."
        }
      ]
    },
    {
      "name": "JobListReturned",
      "status": 200,
      "message": "The job list has been returned.",
      "fields": [
        {
          "spec": "[jobs...]",
          "type": "Job"
        }
      ]
    },
    {
      "name": "JobNotFound",
      "status": 404,
      "message": "The job was not found."
    },
    {
      "name": "JobRemoved",
      "status": 200,
      "message": "The job has been removed.",
      "fields": [
        {
          "spec": "<job>",
          "type": "Job",
          "description": "The removed job."
        }
      ]
    },
    {
      "name": "JobReturned",
      "status": 200,
      "message": "The job has been returned.",
      "fields": [
        {
          "spec": "<job>",
          "type": "Job",
          "description": "The cron job."
        }
      ]
    },
    {
      "name": "ValidationFailed",
      "status": 400,
      "message": "One or more parameters are invalid.",
      "code": "error.model_validation_failed",
      "fields": [
        {
          "spec": "<violations...>",
          "type": "Violation",
          "description": "The validation violations."
        }
      ]
    }
  ],
  "models": [
    {
      "name": "Api",
      "fields": [
        {
          "spec": "<name>",
          "type": "string"
        },
        {
          "spec": "[method]",
          "type": "string?"
        },
        {
          "spec": "[path]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "request",
          "type": "Request"
        },
        {
          "spec": "responses...",
          "type": "string?"
        }
      ]
    },
    {
      "name": "ApiSpec",
      "fields": [
        {
          "spec": "apis...",
          "type": "Api"
        },
        {
          "spec": "responses...",
          "type": "Response"
        },
        {
          "spec": "models...",
          "type": "Model"
        }
      ]
    },
    {
      "name": "Constraint",
      "fields": [
        {
          "spec": "<type>",
          "type": "string"
        },
        {
          "spec": "[code]",
          "type": "string"
        },
        {
          "spec": "[message]",
          "type": "string"
        },
        {
          "spec": "name",
          "type": "string?"
        },
        {
          "spec": "condition",
          "type": "string?"
        },
        {
          "spec": "options",
          "type": "object?"
        }
      ]
    },
    {
      "name": "Field",
      "fields": [
        {
          "spec": "<spec>",
          "type": "string"
        },
        {
          "spec": "[type]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "[defval]",
          "type": "any"
        },
        {
          "spec": "constraints...",
          "type": "Constraint?"
        }
      ]
    },
    {
      "name": "Job",
      "fields": [
        {
          "spec": "<id>",
          "type": "integer",
          "description": "The job ID."
        },
        {
          "spec": "<expr>",
          "type": "string",
          "description": "The cron expression."
        },
        {
          "spec": "<command>",
          "type": "string",
          "description": "The command to run."
        },
        {
          "spec": "<timezone>",
          "type": "string",
          "description": "The time zone.",
          "constraints": [
            {
              "type": "timezone",
              "code": "error.invalid_timezone",
              "message": "The timezone '%{value}' is invalid."
            }
          ]
        },
        {
          "spec": "shell",
          "type": "boolean|string",
          "description": "Use shell to run the command.",
          "defval": true
        },
        {
          "spec": "env",
          "type": "object?",
          "description": "Additional environment variables"
        },
        {
          "spec": "nextRun",
          "type": "string",
          "description": "The local time of the next run."
        },
        {
          "spec": "nextRunUtc",
          "type": "string",
          "description": "The UTC time of the next run."
        },
        {
          "spec": "timeUntilNextRun",
          "type": "integer",
          "description": "The remaining time till the next run."
        },
        {
          "spec": "timeUntilNextRunHumanized",
          "type": "string",
          "description": "The human readable duration of the remaining time till the next run."
        },
        {
          "spec": "lastExitCode",
          "type": "integer",
          "description": "The exit code of the last run.",
          "defval": -1
        }
      ]
    },
    {
      "name": "Model",
      "fields": [
        {
          "spec": "<name>",
          "type": "string",
          "description": "The model name."
        },
        {
          "spec": "fields...",
          "type": "Field?",
          "description": "The model fields."
        }
      ]
    },
    {
      "name": "Parameter",
      "fields": [
        {
          "spec": "<spec>",
          "type": "string"
        },
        {
          "spec": "[type]",
          "type": "string?"
        },
        {
          "spec": "[description]",
          "type": "string?"
        },
        {
          "spec": "[defval]",
          "type": "any"
        },
        {
          "spec": "label",
          "type": "string?"
        },
        {
          "spec": "source",
          "type": "string?"
        },
        {
          "spec": "constraints...",
          "type": "Constraint?"
        }
      ]
    },
    {
      "name": "Request",
      "fields": [
        {
          "spec": "parameters...",
          "type": "Parameter?"
        }
      ]
    },
    {
      "name": "Response",
      "fields": [
        {
          "spec": "<name>",
          "type": "string",
          "description": "The response name."
        },
        {
          "spec": "<status>",
          "type": "integer",
          "description": "The response status code."
        },
        {
          "spec": "[message]",
          "type": "string?",
          "description": "The response status message."
        },
        {
          "spec": "[code]",
          "type": "string?",
          "description": "The error code that the response represents."
        },
        {
          "spec": "fields...",
          "type": "Field?",
          "description": "The response fields."
        }
      ]
    },
    {
      "name": "Violation",
      "fields": [
        {
          "spec": "field",
          "type": "string",
          "description": "The field that failed the validation."
        },
        {
          "spec": "constraint",
          "type": "string",
          "description": "The constraint that caused error."
        },
        {
          "spec": "code",
          "type": "string",
          "description": "The error code."
        },
        {
          "spec": "message",
          "type": "string",
          "description": "The error message."
        }
      ]
    }
  ]
}
